<?php

/**
 * @file
 * Connects data from the Observant Records database to Drupal.
 *
 */

function observantrecords_help($path, $arg) {
	switch ($path) {
		case "admin/help#observantrecords":
			return '<p>' . t('Connects Drupal to Observant Records data') . '</p>';
			break;
	}
}

function observantrecords_block_info() {
	$blocks['artist_info'] = array(
		'info' => t('Artist info'),
		'cache' => DRUPAL_CACHE_PER_PAGE,
	);
	$blocks['album_info'] = array(
		'info' => t('Album Info'),
		'cache' => DRUPAL_CACHE_PER_PAGE,
	);
	$blocks['track_info'] = array(
		'info' => t('Track info'),
		'cache' => DRUPAL_CACHE_PER_PAGE,
	);
	return $blocks;
}

function observantrecords_block_view($delta = '') {
	$node = menu_get_object();
	switch($delta) {
		case 'artist_info':
			$artist_info = new OR_Artist();
			$block['subject'] = t('Artist info');
			$block['content'] = array(
				'#artists' => $artist_info->get_artist_block_content($node),
				'#theme' => 'block_artist_info',
			);
			break;
		case 'album_info':
			$album_info = new OR_Albums();
			$release_alias = $node->field_release_alias[$node->language][0]['value'];
			$block['subject'] = t('Album info');
			$block['content'] = array(
				'#albums' => $album_info->get_album_block_content($node),
				'#release_alias' => $release_alias,
				'#theme' => 'block_album_info',
			);
			break;
		case 'track_info':
			$track_info = new OR_Tracks();
			$block['subject'] = t('Track info');
			$block['content'] = array(
				'#tracks' => $track_info->get_track_block_content($node),
				'#theme' => 'block_track_info',
			);
			break;
	}

	return $block;
}

function observantrecords_node_view($node, $view_mode, $langcode) {
	$artist_alias = (!empty($node->field_artist_alias)) ?
		$node->field_artist_alias[$node->language][0]['value'] :
		null;
	
	$album_alias = (!empty($node->field_album_alias)) ?
		$node->field_album_alias[$node->language][0]['value'] :
		null;
	
	$release_alias = (!empty($node->field_release_alias)) ?
		$node->field_release_alias[$node->language][0]['value'] :
		null;
	
	$track_alias = (!empty($node->field_track_alias)) ?
		$node->field_track_alias[$node->language][0]['value'] :
		null;
	
	$artist_info = new OR_Artist();
	$node->content['artists'] = array(
		'#artists' => $artist_info->get_artist_node_content($node),
		'#theme' => 'node_artist_info');

	if (!empty($artist_alias)) {
		$album_info = new OR_Albums();
		$node->content['albums'] = array(
			'#albums' => $album_info->get_album_node_content($node),
			'#release_alias' => $release_alias,
			'#theme' => 'node_album_info',
		);
	}

	if (!empty($album_alias) || !empty($release_alias)) {
		$track_info = new OR_Tracks();
		$node->content['tracks'] = array(
			'#tracks' => $track_info->get_track_node_content($node),
			'#theme' => 'node_track_info',
		);
	}
}

function observantrecords_theme() {
	$theme = array(
		'block_artist_info' => array(
			'variables' => array(
				'artists' => NULL,
			),
			'template' => 'observantrecords.block.artist_info',
		),
		'block_album_info' => array(
			'variables' => array(
				'albums' => NULL,
				'release_alias' => NULL,
			),
			'template' => 'observantrecords.block.album_info',
		),
		'block_track_info' => array(
			'variables' => array(
				'tracks' => NULL,
			),
			'template' => 'observantrecords.block.track_info',
		),
		'node_artist_info' => array(
			'variables' => array(
				'artists' => NULL,
			),
			'template' => 'observantrecords.block.artist_info',
		),
		'node_album_info' => array(
			'variables' => array(
				'albums' => NULL,
				'release_alias' => NULL,
			),
			'template' => 'observantrecords.block.album_info',
		),
		'node_track_info' => array(
			'variables' => array(
				'tracks' => NULL,
			),
			'template' => 'observantrecords.node.track_info',
		),
	);
	return $theme;
}
